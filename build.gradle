plugins {
    id 'java-library'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'maven-publish'
    id 'signing'
}

group = 'io.extremum'
version = '3.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    ext.extremumVersion = "3.0.0"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-webmvc'
    implementation("io.extremum:extremum-shared-models:$extremumVersion")
    implementation("io.extremum:extremum-jackson-mapper:$extremumVersion")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.1")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1")
    implementation("org.reflections:reflections:0.10.2")
    implementation("com.squareup.okhttp:okhttp:2.7.5")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.14.1")
    testImplementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.14.1")
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = "xdoc-java"
            version = this.version

            from(components["java"])

            pom {
                name.set("xdoc-java")
                description.set("Xdoc for java functions")
                url.set("https://github.com/smekalka/extremum-xdoc-java")
                inceptionYear.set("2022")

                scm {
                    url.set("https://github.com/smekalka/extremum-xdoc-java")
                    connection.set("scm:https://github.com/smekalka/extremum-xdoc-java.git")
                    developerConnection.set("scm:git://github.com/smekalka/extremum-xdoc-java.git")
                }

                licenses {
                    license {
                        name.set("Business Source License 1.1")
                        url.set("https://github.com/smekalka/extremum-xdoc-java/blob/develop/LICENSE.md")
                        distribution.set("repo")
                    }
                }

                developers {
                    developer {
                        id.set("urgimchak")
                        name.set("Maksim Tyutyaev")
                        email.set("maksim.tyutyaev@smekalka.com")
                    }
                }
            }
        }
    }

    repositories {
        maven {
            var releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            var snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            name = "OSSRH"
            var isReleaseVersion = !(version as String).endsWith("-SNAPSHOT")
            url = uri(isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl)
            credentials {
                username = System.getProperty("ossrhUsername")
                password = System.getProperty("ossrhPassword")
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
    archiveClassifier.set("")
}

tasks.named('test') {
    useJUnitPlatform()
}

